/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package fulltexteditor;

import java.awt.Color;
import java.io.PrintWriter;
import java.util.Scanner;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.text.DefaultHighlighter;
import javax.swing.text.Highlighter;
import javax.swing.text.Highlighter.HighlightPainter;

/**
 *
 * @author Abhishek
 */
public class MainWindow extends javax.swing.JFrame {

    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        textArea = new javax.swing.JTextArea();
        statusBar = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        newButton = new javax.swing.JMenuItem();
        saveButton = new javax.swing.JMenuItem();
        openButton = new javax.swing.JMenuItem();
        exitButton = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();
        findButton = new javax.swing.JMenuItem();
        replaceButton = new javax.swing.JMenuItem();
        replaceAllButon = new javax.swing.JMenuItem();
        connectMenu = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        textArea.setColumns(20);
        textArea.setFont(new java.awt.Font("Lucida Console", 0, 14)); // NOI18N
        textArea.setRows(5);
        textArea.setMargin(new java.awt.Insets(0, 0, 0, 0));
        textArea.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                textAreaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(textArea);

        statusBar.setEditable(false);
        statusBar.setMargin(new java.awt.Insets(0, 0, 0, 0));

        fileMenu.setText("File");
        fileMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileMenuActionPerformed(evt);
            }
        });

        newButton.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        newButton.setText("New");
        newButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newButtonActionPerformed(evt);
            }
        });
        fileMenu.add(newButton);

        saveButton.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });
        fileMenu.add(saveButton);

        openButton.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        openButton.setText("Open");
        openButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openButtonActionPerformed(evt);
            }
        });
        fileMenu.add(openButton);

        exitButton.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ESCAPE, java.awt.event.InputEvent.SHIFT_MASK));
        exitButton.setText("Exit");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });
        fileMenu.add(exitButton);

        jMenuBar1.add(fileMenu);

        editMenu.setText("Edit");

        findButton.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F, java.awt.event.InputEvent.CTRL_MASK));
        findButton.setText("Find");
        findButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findButtonActionPerformed(evt);
            }
        });
        editMenu.add(findButton);

        replaceButton.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_MASK));
        replaceButton.setText("Replace");
        replaceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                replaceButtonActionPerformed(evt);
            }
        });
        editMenu.add(replaceButton);

        replaceAllButon.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.SHIFT_MASK));
        replaceAllButon.setText("Replace all");
        replaceAllButon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                replaceAllButonActionPerformed(evt);
            }
        });
        editMenu.add(replaceAllButon);

        jMenuBar1.add(editMenu);

        connectMenu.setText("Connect");
        jMenuBar1.add(connectMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(statusBar, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 632, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 412, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statusBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fileMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileMenuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fileMenuActionPerformed

    private void newButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newButtonActionPerformed
        textArea.setText("");
        statusBar.setText("New File Opened");
    }//GEN-LAST:event_newButtonActionPerformed

    private void openButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openButtonActionPerformed
        JFileChooser choose = new JFileChooser();
            int value = choose.showOpenDialog(this);
            
            if (value == JFileChooser.APPROVE_OPTION){
                
                try{
                    Scanner reader = new Scanner(choose.getSelectedFile());
                    textArea.setText("");
                    while(reader.hasNext())
                    {
                        textArea.append(reader.nextLine()+"\n");
                    }
                    reader.close();
                    statusBar.setText("Successfully Loaded " + choose.getSelectedFile().getAbsolutePath());
                }
                catch(Exception E){}              
            }
    }//GEN-LAST:event_openButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
         JFileChooser choose = new JFileChooser();
        int value = choose.showSaveDialog(this);
        
        if (value == JFileChooser.APPROVE_OPTION){
            try{
            PrintWriter writer = new PrintWriter(choose.getSelectedFile());
            writer.print(textArea.getText());
            writer.close();
            }
            catch(Exception E)
            {
                
            }
            statusBar.setText("Successfully Saved");
        }
    }//GEN-LAST:event_saveButtonActionPerformed

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitButtonActionPerformed

    private void findButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findButtonActionPerformed
      
        String toSearch;
        String Buffer;
        int p1=0,p0;
        Highlighter highlighter = textArea.getHighlighter();
        HighlightPainter painter = 
               new DefaultHighlighter.DefaultHighlightPainter(Color.pink);
        
        //Buffer is Current State of TextArea
        Buffer = textArea.getText();
        toSearch = JOptionPane.showInputDialog("Find:");
        
        //If User Presses cancel
        if(toSearch == null)
            return;
        
         p0 = Buffer.indexOf(toSearch,p1);
         
         //If string is Not Found
         if(p0==-1)
             JOptionPane.showMessageDialog(null,"Not Found","Not Found",JOptionPane.ERROR_MESSAGE);
         
        while(p0!=-1)
        {
            p1 = p0 + toSearch.length();
            try{               
            highlighter.addHighlight(p0, p1, painter );
            }
            catch(Exception BE){ break; }     

            p0 = Buffer.indexOf(toSearch,p1);
        }
        statusBar.setText("");
        
    }//GEN-LAST:event_findButtonActionPerformed

    private void replaceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_replaceButtonActionPerformed
        String toReplace,newString; 
        String Buffer;
        toReplace = JOptionPane.showInputDialog("Replace:");
        newString = JOptionPane.showInputDialog("Replace With:");
        
        //If User Cancels
        
        if(toReplace == null || newString == null)
            return;
        
        Buffer = textArea.getText();
        
        textArea.setText(Buffer.replaceFirst(toReplace, newString));
        statusBar.setText("Successfully Replaced");
        
    }//GEN-LAST:event_replaceButtonActionPerformed

    private void replaceAllButonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_replaceAllButonActionPerformed
       
        String toReplace,newString; 
        String Buffer;
        toReplace = JOptionPane.showInputDialog("Replace:");
        newString = JOptionPane.showInputDialog("Replace With:");
        
        //If User Cancels
        if(toReplace == null || newString == null)
            return;
      
        Buffer = textArea.getText();
        textArea.setText(Buffer.replace(toReplace, newString));
        statusBar.setText("Successfully Replaced");
        
    }//GEN-LAST:event_replaceAllButonActionPerformed

    private void textAreaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_textAreaMouseClicked
            
    }//GEN-LAST:event_textAreaMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu connectMenu;
    private javax.swing.JMenu editMenu;
    private javax.swing.JMenuItem exitButton;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenuItem findButton;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenuItem newButton;
    private javax.swing.JMenuItem openButton;
    private javax.swing.JMenuItem replaceAllButon;
    private javax.swing.JMenuItem replaceButton;
    private javax.swing.JMenuItem saveButton;
    private javax.swing.JTextField statusBar;
    private javax.swing.JTextArea textArea;
    // End of variables declaration//GEN-END:variables
}
